local num1
local num2
local text
local operation
local solution

function init(self)
    msg.post(".", "acquire_input_focus")
end

function on_input(self, action_id, action)
        if action_id == hash("solve") then
                -- Concatenate the input character to the "text" node...
                local node = gui.get_node("text")
                text = gui.get_text(node)
                text = text .. action.text
                gui.set_text(node, text)
                --print(text)
        end
        if action_id == hash("enter") then
        	if text == tostring(solution) then
        		print("YA")
        		msg.post("/board/board#script", "solved", {solution})
        		text = ""
        		local node = gui.get_node("text")
        		gui.set_text(node, text)
        	else
        		print("NO")
        		text = ""
        		local node = gui.get_node("text")
        		gui.set_text(node, text)
        	end
        end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("hide") then
		msg.post("#", "disable")
        msg.post(".", "release_input_focus")
	end

    if message_id == hash("solve_components") then
       	msg.post("#", "enable")
        msg.post(".", "acquire_input_focus")
       	num1 = message[2]
       	num2 = message[3]
       	if(message[1] == hash("add"))then
       		solution = num1 + num2
       	elseif(message[1] == hash("multiply"))then
       		solution = num1 * num2
       	elseif(message[1] == hash("divide"))then
       		solution = num1 / num2
      	elseif(message[1] == hash("subtract"))then
      		solution = num1 - num2
       	elseif(message[1] == hash("exponent"))then
       		solution = num1 * num2
       	end
       	--local node = gui.get_node("text")
        --local text = gui.get_text(node)
        --text = solution
        --gui.set_text(node, text)
       	print(solution)
   	end
end