go.property("operation", hash(" ")) -- default number is 1
go.property("ix", 0) -- Initial Position x
go.property("iy", 0) -- Initial Position y

local id

function init(self)
	if self.operation == hash("+") then
		label.set_text("#operand", "+")
	elseif self.operation == hash("-") then
		label.set_text("#operand", "-")
	elseif self.operation == hash("*") then
		label.set_text("#operand", "*")
	elseif self.operation == hash("/") then
		label.set_text("#operand", "/")
	elseif self.operation == hash("^") then
		label.set_text("#operand", "^")	
	end
	msg.post(".", "acquire_input_focus")
	print("operation " .. ":" .. self.operation)
end

function on_input(self, action_id, action)
 		if action_id == hash("drag") and action.pressed then
 			local pos = go.get_position()
            local x = action.x
        	local y = action.y

        	self.dragging = true
        	
       		if x + 25 < pos.x or x - 25 > pos.x or y + 25 < pos.y or y - 25 > pos.y then --card "hit box"
            	-- outside board.
        	else
				id = go.get_id()
			end        		
 		
        elseif action_id == hash("drag") and action.value == 1 then
              	if id == go.get_id() then
			        local pos = go.get_position()
			        pos.x = action.x
			        pos.y = action.y
			        go.set_position(pos)
			            
			        local board = msg.url("/game/Board/Board#script")
					msg.post(board, "operation_id", {id})
		        end
		        
	    elseif action_id == hash("drag") and action.released then
	        -- Player released touch.
	        if id == go.get_id() then
	        	id = nil
	        	self.dragging = false
	        	local board = msg.url("/game/Board/Board#script")
				msg.post(board, "operation_released", {self.ix, self.iy})
			end
    end
end

function final(self)
	msg.post(".", "release_input_focus")	
end
